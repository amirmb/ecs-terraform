pipeline {
    agent any
    environment {
        HTTP_PROXY = "{env.HTTP_PROXY}"
        HTTPS_PROXY = "{env.HTTP_PROXY}"
        NO_PROXY = "{env.NO_PROXY}"
        WEBHOOK_URL = "{env.WEBHOOK_URL}"
        PROVISIONING_ROLE = "{env.PROVISIONING_ROLE}"
    }
    stages {
        stage('Preparation') {
            steps {
                scripts {
                    currentBuild.displayName = "#${env.BUILD_NUMBER}: ${env.APP_ENVIRONMENT} - ${env.GITHUB_TAG}"
                    env.JOB_NAME = env.JOB_NAME.substring(env.JOB_NAME.lastIndexOf('/') + 1)
                    env.PATH = "/usr/local/bin:${env.PATH}"
                    env.PROVISIONING_ROLE = "${PROVISIONING_ROLE}"
                    echo "run preparation script"
                    make prepare_ami
                }
            }
        }
        stage('Building AMI') {
            when {
                branch 'master'
                environment name: 'PLATFORM', value: 'Production'
            }
            steps {
                script {
                    withAWS(role : env.PROVISIONING_ROLE)  {
                        make build_ami
                    }
                }
            }
        }
    }
    post {
        always {
            sh 'make clean'
            echo 'Deleting Workspace'
            deleteDir()
        }
        success {
            addEmbeddableBadgeConfiguration id: "AMI", subject: "deployed", status: "${env.GITHUB_TAG}", link: "${env.BUILD_URL}"
        }
        failure {
            addEmbeddableBadgeConfiguration id: "AMI", subject: "failed", color: "red", status: "${env.GITHUB_TAG}", link: "${env.BUILD_URL}"
        }
    }
}
